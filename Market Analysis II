The query result format is in the following example:

Users table:
+---------+------------+----------------+
| user_id | join_date  | favorite_brand |
+---------+------------+----------------+
| 1       | 2019-01-01 | Lenovo         |
| 2       | 2019-02-09 | Samsung        |
| 3       | 2019-01-19 | LG             |
| 4       | 2019-05-21 | HP             |
+---------+------------+----------------+

Orders table:
+----------+------------+---------+----------+-----------+
| order_id | order_date | item_id | buyer_id | seller_id |
+----------+------------+---------+----------+-----------+
| 1        | 2019-08-01 | 4       | 1        | 2         |
| 2        | 2019-08-02 | 2       | 1        | 3         |
| 3        | 2019-08-03 | 3       | 2        | 3         |
| 4        | 2019-08-04 | 1       | 4        | 2         |
| 5        | 2019-08-04 | 1       | 3        | 4         |
| 6        | 2019-08-05 | 2       | 2        | 4         |
+----------+------------+---------+----------+-----------+

Items table:
+---------+------------+
| item_id | item_brand |
+---------+------------+
| 1       | Samsung    |
| 2       | Lenovo     |
| 3       | LG         |
| 4       | HP         |
+---------+------------+

Result table:
+-----------+--------------------+
| seller_id | 2nd_item_fav_brand |
+-----------+--------------------+
| 1         | no                 |
| 2         | yes                |
| 3         | yes                |
| 4         | no                 |
+-----------+--------------------+

The answer for the user with id 1 is no because they sold nothing.
The answer for the users with id 2 and 3 is yes because the brands of their second sold items are their favorite brands.
The answer for the user with id 4 is no because the brand of their second sold item is not their favorite brand.

Query:
--create table userss(user_id int, join_date date, favorite_brand varchar(50))
--create table ordersss(order_id int,order_date date,item_id int, buyer_id int, seller_id int)
--create table itemss(item_id int, item_brand varchar(50))

--insert into userss values
--(1,'2019-01-01','Lenovo'),
--(2,'2019-02-09','Samsung'),
--(3,'2019-01-19','LG'),
--(4,'2019-05-21','HP')



--insert into ordersss values
--(1,'2019-08-01',4,1,2),
--(2,'2019-08-02',2,1,3),
--(3,'2019-08-03',3,2,3),
--(4,'2019-08-04',1,4,2),
--(5,'2019-08-04',1,3,4),
--(6,'2019-08-05',2,2,4)

--insert into itemss values
--(1,'Samsung'),
--(2,'Lenovo'),
--(3,'LG'),
--(4,'HP')
select u.user_id,
       case when a.item_id =i.item_id then 'yes' 
	        else 'No' end as '2nd_fav_brand_sell'  
from(
     select seller_id, 
	 item_id 
	 from ordersss o 
               where o.order_date in (select max(order_date) 
			                          from ordersss where order_date!=(select max(order_date) from ordersss) 
									                       and seller_id = o.seller_id)
) a right join userss u on a.seller_id = u.user_id 
     right join  itemss i on u.favorite_brand = i.item_brand
	 order by u.user_id
        
 OR       

select a.user_id, 
       case when b.item_id is null then 'no'
                         else 'yes' end
                    as '2nd_item_fav_brand'
from(
select  u.user_id,i.item_id from userss u join itemss i
on u.favorite_brand =i.item_brand
) a
 left join
(
select o.item_id, o.seller_id from 
ordersss o
where order_date=(select max(order_date) from ordersss where seller_Id=o.seller_id)
) b
on a.user_id=b.seller_id  and a.item_id=b.item_id

