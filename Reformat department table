Write an SQL query to reformat the table such that there is a department id column and a revenue column for each month.
The query result format is in the following example:
Department table:
+------+---------+-------+
| id   | revenue | month |
+------+---------+-------+
| 1    | 8000    | Jan   |
| 2    | 9000    | Jan   |
| 3    | 10000   | Feb   |
| 1    | 7000    | Feb   |
| 1    | 6000    | Mar   |
+------+---------+-------+
Result table:
+------+-------------+-------------+-------------+-----+-------------+
| id   | Jan_Revenue | Feb_Revenue | Mar_Revenue | ... | Dec_Revenue |
+------+-------------+-------------+-------------+-----+-------------+
| 1    | 8000        | 7000        | 6000        | ... | null        |
| 2    | 9000        | null        | null        | ... | null        |
| 3    | null        | 10000       | null        | ... | null        |
+------+-------------+-------------+-------------+-----+-------------+
Note that the result table has 13 columns (1 for the department id + 12 for the months).

Query:
--insert into department1 values
--(1,8000,'Jan'),
--(2,9000,'Jan'),
--(3,10000,'Feb'),
--(1,7000,'Feb'),
--(1,6000,'Mar')


select d.id,
       (select revenue  from department where mon_name='Jan' and id=d.id) as Jan_revenue,
       (select revenue  from department where mon_name='Feb' and id=d.id) as Feb_revenue,
       (select revenue  from department where mon_name='Mar' and id=d.id) as Mar_revenue,
        (select revenue  from department where mon_name='Apr' and id=d.id) as Apr_revenue
		---
		----
from department1 d
