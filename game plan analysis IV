Write an SQL query that reports the fraction of players that logged in again on the day after the day they first logged in, rounded to 2 decimal places. In other words, you need to count the number of players that logged in for at least two consecutive days starting from their first login date, then divide that number by the total number of players.

The query result format is in the following example:

Activity table:
+-----------+-----------+------------+--------------+
| player_id | device_id | event_date | games_played |
+-----------+-----------+------------+--------------+
| 1         | 2         | 2016-03-01 | 5            |
| 1         | 2         | 2016-03-02 | 6            |
| 2         | 3         | 2017-06-25 | 1            |
| 3         | 1         | 2016-03-02 | 0            |
| 3         | 4         | 2018-07-03 | 5            |
+-----------+-----------+------------+--------------+

Result table:
+-----------+
| fraction  |
+-----------+
| 0.33      |
+-----------+
Only the player with id 1 logged back in after the first day he had logged in so the answer is 1/3 = 0.33


Query:

--create table activity(
--player_id int,
--device_id int,
--event_date date,
--games_played int)


--insert into activity values(1,2,'2016-03-02',6),          
--(2,3, '2017-06-25' , 10),           
--(3,1, '2016-03-02' , 0),          
--(3,4, '2018-07-03' ,5)


select * from activity;

select convert(b.cnt/(select count(distinct player_id) from activity),decimal(3,2)) from(
                                         select  count(a.player_id) as cnt from activity a
                                         where a.player_id =(select player_id from activity
                                                              where a.event_date=dateadd(day,1,event_date))) b 


