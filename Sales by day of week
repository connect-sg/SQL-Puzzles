You are the business owner and would like to obtain a sales report for category items and day of the week.

Write an SQL query to report how many units in each category have been ordered on each day of the week.

Return the result table ordered by category.

The query result format is in the following example:

 

Orders table:
+------------+--------------+-------------+--------------+-------------+
| order_id   | customer_id  | order_date  | item_id      | quantity    |
+------------+--------------+-------------+--------------+-------------+
| 1          | 1            | 2020-06-01  | 1            | 10          |
| 2          | 1            | 2020-06-08  | 2            | 10          |
| 3          | 2            | 2020-06-02  | 1            | 5           |
| 4          | 3            | 2020-06-03  | 3            | 5           |
| 5          | 4            | 2020-06-04  | 4            | 1           |
| 6          | 4            | 2020-06-05  | 5            | 5           |
| 7          | 5            | 2020-06-05  | 1            | 10          |
| 8          | 5            | 2020-06-14  | 4            | 5           |
| 9          | 5            | 2020-06-21  | 3            | 5           |
+------------+--------------+-------------+--------------+-------------+

Items table:
+------------+----------------+---------------+
| item_id    | item_name      | item_category |
+------------+----------------+---------------+
| 1          | LC Alg. Book   | Book          |
| 2          | LC DB. Book    | Book          |
| 3          | LC SmarthPhone | Phone         |
| 4          | LC Phone 2020  | Phone         |
| 5          | LC SmartGlass  | Glasses       |
| 6          | LC T-Shirt XL  | T-Shirt       |
+------------+----------------+---------------+

Result table:
+------------+-----------+-----------+-----------+-----------+-----------+-----------+-----------+
| Category   | Monday    | Tuesday   | Wednesday | Thursday  | Friday    | Saturday  | Sunday    |
+------------+-----------+-----------+-----------+-----------+-----------+-----------+-----------+
| Book       | 20        | 5         | 0         | 0         | 10        | 0         | 0         |
| Glasses    | 0         | 0         | 0         | 0         | 5         | 0         | 0         |
| Phone      | 0         | 0         | 5         | 1         | 0         | 0         | 10        |
| T-Shirt    | 0         | 0         | 0         | 0         | 0         | 0         | 0         |
+------------+-----------+-----------+-----------+-----------+-----------+-----------+-----------+
On Monday (2020-06-01, 2020-06-08) were sold a total of 20 units (10 + 10) in the category Book (ids: 1, 2).
On Tuesday (2020-06-02) were sold a total of 5 units  in the category Book (ids: 1, 2).
On Wednesday (2020-06-03) were sold a total of 5 units in the category Phone (ids: 3, 4).
On Thursday (2020-06-04) were sold a total of 1 unit in the category Phone (ids: 3, 4).
On Friday (2020-06-05) were sold 10 units in the category Book (ids: 1, 2) and 5 units in Glasses (ids: 5).
On Saturday there are no items sold.
On Sunday (2020-06-14, 2020-06-21) were sold a total of 10 units (5 +5) in the category Phone (ids: 3, 4).
There are no sales of T-Shirt.


Query:

--drop table orders
--create table orders(order_id int, custoemr_id int, order_date date, item_id int, quantity int)
--insert into orders 
--values
--(1,1,'2020-06-01',1,10),
--(2,1,'2020-06-08',2,10),
--(3,2,'2020-06-02',1,5),
--(4,3,'2020-06-03',3,5),
--(5,4,'2020-06-04',4,1),
--(6,4,'2020-06-05',5,5),
--(7,5,'2020-06-05',1,10),
--(8,5,'2020-06-14',4,5),
--(9,5,'2020-06-21',3,5)



--create table items(item_id int, item_name varchar(50), item_category varchar(50))
--insert into items 
--values
--( 1          , 'LC Alg. Book  ' , 'Book   ')       ,
--( 2          , 'LC DB. Book   ' , 'Book   ')       ,
--( 3          , 'LC SmarthPhone' , 'Phone  ')       ,
--( 4          , 'LC Phone 2020 ' , 'Phone  ')       ,
--( 5          , 'LC SmartGlass ' , 'Glasses')       ,
--( 6          , 'LC T-Shirt XL ' , 'T-Shirt')       

select a.item_category, sum(a.monday),sum(a.tuesday), sum(a.wednesday),sum(a.thursday),sum(a.friday),sum(a.saturday),sum(a.sunday)
from (

select i.item_category,
       case when datepart(weekday,o.order_date)=2 then sum(o.quantity) 
            else 0 end as monday,
       case when datepart(weekday,o.order_date)=3 then sum(o.quantity)
            else 0 end as tuesday,
       case when datepart(weekday,o.order_date)=4 then sum(o.quantity)
            else 0 end as Wednesday,
       case when datepart(weekday,o.order_date)=5 then sum(o.quantity)
            else 0 end as thursday,
       case when datepart(weekday,o.order_date)=6 then sum(o.quantity)
            else 0 end as friday  ,      
       case when datepart(weekday,o.order_date)=7 then sum(o.quantity)
            else 0 end as saturday,
       case when datepart(weekday,o.order_date)=1 then sum(o.quantity)
            else 0 end as sunday               
from orders o right join items i 
on o.item_id=i.item_id
group by i.item_category,datepart(weekday,o.order_date)) a
group by a.item_category

--+------------+-----------+-----------+-----------+-----------+-----------+-----------+-----------+
--| Category   | Monday    | Tuesday   | Wednesday | Thursday  | Friday    | Saturday  | Sunday    |
--+------------+-----------+-----------+-----------+-----------+-----------+-----------+-----------+
--| Book       | 20        | 5         | 0         | 0         | 10        | 0         | 0         |
--| Glasses    | 0         | 0         | 0         | 0         | 5         | 0         | 0         |
--| Phone      | 0         | 0         | 5         | 1         | 0         | 0         | 10        |
--| T-Shirt    | 0         | 0         | 0         | 0         | 0         | 0         | 0         |
--+------------+-----------+-----------+-----------+-----------+-----------+-----------+-----------+
