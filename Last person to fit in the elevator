Write an SQL query to find the person_name of the last person who will fit in the elevator without exceeding the weight limit. It is guaranteed that the person who is first in the queue can fit in the elevator.

The query result format is in the following example:

Queue table
+-----------+-------------------+--------+------+
| person_id | person_name       | weight | turn |
+-----------+-------------------+--------+------+
| 5         | George Washington | 250    | 1    |
| 3         | John Adams        | 350    | 2    |
| 6         | Thomas Jefferson  | 400    | 3    |
| 2         | Will Johnliams    | 200    | 4    |
| 4         | Thomas Jefferson  | 175    | 5    |
| 1         | James Elephant    | 500    | 6    |
+-----------+-------------------+--------+------+

Result table
+-------------------+
| person_name       |
+-------------------+
| Thomas Jefferson  |
+-------------------+

Queue table is ordered by turn in the example for simplicity.
In the example George Washington(id 5), John Adams(id 3) and Thomas Jefferson(id 6) will enter the elevator as their weight sum is 250 + 350 + 400 = 1000.
Thomas Jefferson(id 6) is the last person to fit in the elevator because he has the last turn in these three people.


Query:
--create table queue (person_id int,
--                    person_name varchar(50),
--                    weight int,
--                    turn int)

--insert into queue values
--(5,'GeorgeWashington',250,1),
--(3,'JohnAdams',350,2),
--(6,'ThomasJefferson',400,3),
--(2,'WillJohnliams',200,4),
--(4,'ThomasJefferson',175,5),
--(1,'JamesElephant',500,6)

select q.person_name from 
(select max(a.turn) as turn from 
(
			select q1.turn,
				   sum(q2.weight) as wt
			from queue q1 
			join queue q2
			on q1.turn>=q2.turn
			group by q1.turn
			having sum(q2.weight)<=1000
) a) b
join queue q
on b.turn =q.turn
