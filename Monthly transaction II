Write an SQL query to find for each month and country, the number of approved transactions and their total amount, the number of chargebacks and their total amount.

Note: In your query, given the month and country, ignore rows with all zeros.


 
The query result format is in the following example:

Transactions table:

+------+---------+----------+--------+------------+
| id   | country | state    | amount | trans_date |
+------+---------+----------+--------+------------+
| 101  | US      | approved | 1000   | 2019-05-18 |
| 102  | US      | declined | 2000   | 2019-05-19 |
| 103  | US      | approved | 3000   | 2019-06-10 |
| 104  | US      | approved | 4000   | 2019-06-13 |
| 105  | US      | approved | 5000   | 2019-06-15 |
+------+---------+----------+--------+------------+

Chargebacks table:
+------------+------------+
| trans_id   | trans_date |
+------------+------------+
| 102        | 2019-05-29 |
| 101        | 2019-06-30 |
| 105        | 2019-09-18 |
+------------+------------+

Result table:
+----------+---------+----------------+-----------------+-------------------+--------------------+
| month    | country | approved_count | approved_amount | chargeback_count  | chargeback_amount  |
+----------+---------+----------------+-----------------+-------------------+--------------------+
| 2019-05  | US      | 1              | 1000            | 1                 | 2000               |
| 2019-06  | US      | 3              | 12000           | 1                 | 1000               |
| 2019-09  | US      | 0              | 0               | 1                 | 5000               |
+----------+---------+----------------+-----------------+-------------------+--------------------+


Query:
--create table transactions1
--(id int, country varchar(50), state varchar(50), amount int, trans_date date)

--insert into transactions1
--values
--(101,'US','approved',1000,'2019-05-18'),
--(102,'US','declined',2000,'2019-05-19'),
--(103,'US','approved',3000,'2019-06-10'),
--(104,'US','approved',4000,'2019-06-13'),
--(105,'US','approved',5000,'2019-06-15') 

--create table chargebacks(trans_id int, trans_date date)
-- insert into chargebacks 
-- values
-- (102, '2019-05-29' ),
--(101, '2019-06-30' ),
--(105, '2019-09-18' )

--+----------+---------+----------------+-----------------+-------------------+--------------------+
--| month    | country | approved_count | approved_amount | chargeback_count  | chargeback_amount  |
--+----------+---------+----------------+-----------------+-------------------+--------------------+
--| 2019-05  | US      | 1              | 1000            | 1                 | 2000               |
--| 2019-06  | US      | 3              | 12000           | 1                 | 1000               |
--| 2019-09  | US      | 0              | 0               | 1                 | 5000               |
--+----------+---------+----------------+-----------------+-------------------+--------------------+


select concat(year(c.trans_date),'-',month(c.trans_date)) as 'month',
       t.country,
       (select count(*) from transactions1 where month(trans_date)=month(c.trans_date) and state='approved') as approved_count,
       coalesce((select sum(amount) from transactions1 where month(trans_date)=month(c.trans_date) and state='approved'),0) as approved_amount,
       (select count(*) from transactions1 where c.trans_id=id) as chargeback_count,
       (select amount from transactions1 where id in (select trans_id from chargebacks where month(trans_date)=month(c.trans_date))) as chargeback_amount
 from transactions1 t join chargebacks c
 on c.trans_id=t.id
 order by concat(year(c.trans_date),'-',month(c.trans_date))  
