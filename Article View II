Write an SQL query to find all the people who viewed more than one article on the same date, sorted in ascending order by their id.

The query result format is in the following example:

Views table:
+------------+-----------+-----------+------------+
| article_id | author_id | viewer_id | view_date  |
+------------+-----------+-----------+------------+
| 1          | 3         | 5         | 2019-08-01 |
| 3          | 4         | 5         | 2019-08-01 |
| 1          | 3         | 6         | 2019-08-02 |
| 2          | 7         | 7         | 2019-08-01 |
| 2          | 7         | 6         | 2019-08-02 |
| 4          | 7         | 1         | 2019-07-22 |
| 3          | 4         | 4         | 2019-07-21 |
| 3          | 4         | 4         | 2019-07-21 |
+------------+-----------+-----------+------------+

Result table:
+------+
| id   |
+------+
| 5    |
| 6    |
+------+


Query:
--create table views(article_id int, author_id int, viewer_id int, view_date date)

--insert into views 
--values
--(1,3,5,'2019-08-01'),
--(3,4,5,'2019-08-01'),
--(1,3,6,'2019-08-02'),
--(2,7,7,'2019-08-01'),
--(2,7,6,'2019-08-02'),
--(4,7,1,'2019-07-22'),
--(3,4,4,'2019-07-21'),
--(3,4,4,'2019-07-21')

select viewer_id as id from views where author_id!=viewer_id
                       group by view_date, viewer_id having count(view_date)>1 
		       
		       OR

select * from views;
select a.viewer_id from (
select distinct article_id, viewer_id,view_date 
from views 
group by view_date,viewer_id,article_id) a
group by viewer_id
having count(a.viewer_id)>1

OR 
SELECT a.VIEWER_ID FROM (
	SELECT VIEWER_ID,VIEW_DATE FROM VIEWS 
	                 GROUP BY VIEWER_ID,VIEW_DATE HAVING COUNT(DISTINCT ARTICLE_ID)>1) a


