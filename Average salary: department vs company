Given two tables as below, write a query to display the comparison result (higher/lower/same) of the average salary of employees in a department to the company’s average salary.
Table: salary

id	employee_id	amount	pay_date
1	1	9000	2017-03-31
2	2	6000	2017-03-31
3	3	10000	2017-03-31
4	1	7000	2017-02-28
5	2	6000	2017-02-28
6	3	8000	2017-02-28
The employee_id column refers to the employee_id in the following table employee.


 
employee_id	department_id
1	1
2	2
3	2
So for the sample data above, the result is:

pay_month	department_id	comparison
2017-03	1	higher
2017-03	2	lower
2017-02	1	same
2017-02	2	same
Explanation

In March, the company’s average salary is (9000+6000+10000)/3 = 8333.33…

The average salary for department ‘1’ is 9000, which is the salary of employee_id ‘1’ since there is only one employee in this department. So the comparison result is ‘higher’ since 9000 > 8333.33 obviously.

The average salary of department ‘2’ is (6000 + 10000)/2 = 8000, which is the average of employee_id ‘2’ and ‘3’. So the comparison result is ‘lower’ since 8000 < 8333.33.

With the same formula for the average salary comparison in February, the result is ‘same’ since both the department ‘1’ and ‘2’ have the same average salary with the company, which is 7000.


Query:

SELECT CONCAT(YEAR(PAY_DATE),'-', MONTH(PAY_DATE)) AS PAY_MONTH,
       A.DEPARTMENT_ID,
       CASE WHEN A.AVG_DEPT_AMT>(SELECT AVG(AMOUNT) FROM SALARY WHERE PAY_DATE = A.PAY_DATE) THEN 'HIGHER'
            WHEN A.AVG_DEPT_AMT<(SELECT AVG(AMOUNT) FROM SALARY WHERE PAY_DATE = A.PAY_DATE) THEN 'LOWER' 
			ELSE 'SAME' END AS COMPARISON
FROM             
     (SELECT 
              AVG(S.AMOUNT) AS AVG_DEPT_AMT,
              S.PAY_DATE,
              E.DEPARTMENT_ID FROM SALARY S JOIN EMPY E 
                                             ON S.EMPLOYEE_ID = E.EMPY_ID
              GROUP BY E.DEPARTMENT_ID,S.PAY_DATE ) A 
	      
	      
	      OR 
	      
	      
	      select distinct pay_date, d.department_id, case  when (select avg(amount) from salary s1 join empy d1 on s1.employee_id=d1.empy_id where s1.pay_date=s.pay_date and d1.department_id =d.department_id)> (select avg(amount) from salary where pay_date =s.pay_date) then 'higher'
                         when (select avg(amount) from salary s1 join empy d1 on s1.employee_id=d1.empy_id where s1.pay_date=s.pay_date and d1.department_id =d.department_id)< (select avg(amount) from salary where pay_date =s.pay_date) then 'lower'
						 else 'same' end as comparison
						 from salary s join empy d on s.employee_id=d.empy_id
						 
	OR
	
	
	select concat(year(a.pay_date),'-0',month(a.pay_date)) as pay_month, case when a.amt1<b.amt2 then 'higher' when a.amt1>b.amt2 then 'lower' else 'same' end as comp from (
select distinct s.pay_date,avg(s.amount) amt1 from salary s group by s.pay_date) a join (
select s.pay_date, d.department_id, avg(s.amount) amt2 from salary s join empy d on s.employee_id=d.empy_id group by s.pay_date,d.department_id) b 
on a.pay_date=b.pay_date
order by pay_month desc
						 


